package com.isolatedpixel.skymission.graphics;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.assets.AssetManager;
import com.badlogic.gdx.assets.loaders.SkinLoader;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Animation;
import com.badlogic.gdx.graphics.g2d.TextureAtlas;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.scenes.scene2d.ui.Skin;

public class Assets {
	static AssetManager manager = new AssetManager();

	public static final String MenuSkin = "json/menuSkin.json",
			Splash = "gfx/logo.png";

	public static Animation walkLeftAnimation;
	public static Animation walkRightAnimation;
	public static Animation IdleLeftAnimation;
	public static Animation IdleRightAnimation;
	
	
	public static TextureRegion bobIdleLeft;
	public static TextureRegion bobIdleRight;

	static TextureAtlas playerAtlas;

	public static void loadPlayer() {
		playerAtlas = new TextureAtlas(Gdx.files.internal("textures/bh.pack"));

		bobIdleRight = playerAtlas.findRegion("bh_nw");
		TextureRegion idle2 = playerAtlas.findRegion("b_nw");
		IdleRightAnimation = new Animation(.15f, bobIdleRight, idle2);
		
		
		TextureRegion idle1 = new TextureRegion(idle2);
		idle1.flip(true, false);
		bobIdleLeft = new TextureRegion(bobIdleRight);
		bobIdleLeft.flip(true, false);
		
		IdleLeftAnimation = new Animation(.15f, bobIdleLeft, idle1);
		
		TextureRegion walkRight = playerAtlas.findRegion("w_nw");
		TextureRegion walkLeft = new TextureRegion(walkRight);
		walkLeft.flip(true, false);
		
		
		walkRightAnimation = new Animation(.15f,bobIdleRight, walkRight);
		walkLeftAnimation = new Animation(.15f, bobIdleLeft, walkLeft);
	}

	public static void loadMenus() {

		// manager.load("ui/utils.pack", TextureAtlas.class);
		manager.load(Splash, Texture.class);
		manager.finishLoading();
		manager.load(MenuSkin, Skin.class, new SkinLoader.SkinParameter(
				"ui/utils.pack"));

	}

	public synchronized static <T> T get(String fileName, Class<T> type) {
		return manager.get(fileName, type);
	}

	public static boolean update() {
		return manager.update();
	}

	public static float getProgress() {
		// TODO Auto-generated method stub
		return manager.getProgress();

	}

	public static boolean isLoaded(String fileName) {
		return manager.isLoaded(fileName);
	}

	public static void disposeMenu() {

		manager.unload(Splash);

	}

}
